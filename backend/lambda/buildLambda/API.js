"use strict";
/* tslint:disable */
/* eslint-disable */
//  This file was automatically generated and should not be edited.
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpendingSummaryType = exports.CacheType = exports.ChatType = exports.ChatFocus = exports.HighLevelTransactionCategory = void 0;
var HighLevelTransactionCategory;
(function (HighLevelTransactionCategory) {
    HighLevelTransactionCategory["INCOME"] = "INCOME";
    HighLevelTransactionCategory["TRANSFER_IN"] = "TRANSFER_IN";
    HighLevelTransactionCategory["TRANSFER_OUT"] = "TRANSFER_OUT";
    HighLevelTransactionCategory["LOAN_PAYMENTS"] = "LOAN_PAYMENTS";
    HighLevelTransactionCategory["BANK_FEES"] = "BANK_FEES";
    HighLevelTransactionCategory["ENTERTAINMENT"] = "ENTERTAINMENT";
    HighLevelTransactionCategory["FOOD_AND_DRINK"] = "FOOD_AND_DRINK";
    HighLevelTransactionCategory["GENERAL_MERCHANDISE"] = "GENERAL_MERCHANDISE";
    HighLevelTransactionCategory["HOME_IMPROVEMENT"] = "HOME_IMPROVEMENT";
    HighLevelTransactionCategory["MEDICAL"] = "MEDICAL";
    HighLevelTransactionCategory["PERSONAL_CARE"] = "PERSONAL_CARE";
    HighLevelTransactionCategory["GENERAL_SERVICES"] = "GENERAL_SERVICES";
    HighLevelTransactionCategory["GOVERNMENT_AND_NON_PROFIT"] = "GOVERNMENT_AND_NON_PROFIT";
    HighLevelTransactionCategory["TRANSPORTATION"] = "TRANSPORTATION";
    HighLevelTransactionCategory["TRAVEL"] = "TRAVEL";
    HighLevelTransactionCategory["RENT_AND_UTILITIES"] = "RENT_AND_UTILITIES";
})(HighLevelTransactionCategory || (exports.HighLevelTransactionCategory = HighLevelTransactionCategory = {}));
var ChatFocus;
(function (ChatFocus) {
    ChatFocus["All"] = "All";
    ChatFocus["Investment"] = "Investment";
    ChatFocus["Transaction"] = "Transaction";
    ChatFocus["Accounts"] = "Accounts";
    ChatFocus["Tax"] = "Tax";
})(ChatFocus || (exports.ChatFocus = ChatFocus = {}));
var ChatType;
(function (ChatType) {
    ChatType["Regular"] = "Regular";
    ChatType["FinancialNewsQuery"] = "FinancialNewsQuery";
    ChatType["FinancialAnalysisQuery"] = "FinancialAnalysisQuery";
})(ChatType || (exports.ChatType = ChatType = {}));
var CacheType;
(function (CacheType) {
    CacheType["StockNews"] = "StockNews";
    CacheType["StockAnalysis"] = "StockAnalysis";
    CacheType["InvestmentAnalysis"] = "InvestmentAnalysis";
    CacheType["PortfolioAnalysis"] = "PortfolioAnalysis";
})(CacheType || (exports.CacheType = CacheType = {}));
var SpendingSummaryType;
(function (SpendingSummaryType) {
    SpendingSummaryType["MONTHLYSUMMARY"] = "MONTHLYSUMMARY";
    SpendingSummaryType["DAILYSUMMARY"] = "DAILYSUMMARY";
})(SpendingSummaryType || (exports.SpendingSummaryType = SpendingSummaryType = {}));
//# sourceMappingURL=data:application/json;base64,