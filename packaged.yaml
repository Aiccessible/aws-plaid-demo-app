AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Plaid Demo
Parameters:
  Environment:
    Type: String
    Description: Environment Tag
    Default: dev
  GitHubOrg:
    Type: String
    Description: GitHub User or Organization
  GitHubRepo:
    Type: String
    Description: GitHub Repository
    Default: aws-plaid-demo-app
  PlaidClientId:
    Type: String
    Description: Plaid Client ID
  PlaidSecretKey:
    Type: String
    Description: Plaid Secret Key
  GptSecretKey:
    Type: String
    Description: Gpt Secret Key
  PerplexitySecretKey:
    Type: String
    Description: Perplexity Secret Key
  PlaidEnvironment:
    Type: String
    Description: Plaid Environment
    Default: sandbox
    AllowedValues:
    - sandbox
    - development
    - production
  GitHubAccessToken:
    Type: String
    Description: GitHub Personal Access Token
  BranchName:
    Type: String
    Description: Git branch name
    Default: main
  Stage:
    Type: String
    Description: The stage of the deployment
    Default: prod
    AllowedValues:
    - owen-dev
    - beta
    - gamma
    - prod
Globals:
  Function:
    Architectures:
    - x86_64
    Environment:
      Variables:
        AWS_LAMBDA_LOG_LEVEL: INFO
        POWERTOOLS_LOG_LEVEL: INFO
        POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
        POWERTOOLS_LOGGER_LOG_EVENT: true
        POWERTOOLS_METRICS_NAMESPACE: PlaidApi
        ENVIRONMENT:
          Ref: Environment
        TABLE_NAME:
          Ref: Table
    Handler: app.lambda_handler.handler
    Layers:
    - Fn::Sub: arn:${AWS::Partition}:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:73
    - Ref: DependencyLayer
    LoggingConfig:
      LogFormat: JSON
    MemorySize: 128
    PropagateTags: true
    Runtime: python3.12
    Tags:
      GITHUB_ORG:
        Ref: GitHubOrg
      GITHUB_REPO:
        Ref: GitHubRepo
      Environment:
        Ref: Environment
    Timeout: 10
    Tracing: Active
Resources:
  PlaidCredential:
    Type: AWS::SecretsManager::Secret
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W77
          reason: Ignoring KMS key
      SamResourceId: PlaidCredential
    Properties:
      Description:
        Fn::Sub: Plaid Credential - ${PlaidEnvironment}
      Name:
        Fn::Sub: plaid/${PlaidEnvironment}/credentials1
      SecretString:
        Fn::Sub: "{\n  \"client_id\": \"${PlaidClientId}\",\n  \"client_secret\":\
          \ \"${PlaidSecretKey}\",\n  \"endpoint\": \"https://${PlaidEnvironment}.plaid.com\"\
          \n}"
      Tags:
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  GptCredential:
    Type: AWS::SecretsManager::Secret
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W77
          reason: Ignoring KMS key
      SamResourceId: GptCredential
    Properties:
      Description: GPT Key
      Name:
        Fn::Sub: GPT/${Stage}/credentials1
      SecretString:
        Fn::Sub: "{\n  \"gpt_secret_key\": \"${GptSecretKey}\",\n}"
      Tags:
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  PerplexityCredential:
    Type: AWS::SecretsManager::Secret
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W77
          reason: Ignoring KMS key
      SamResourceId: PerplexityCredential
    Properties:
      Description: GPT Key
      Name:
        Fn::Sub: GPT/${Stage}/credentials2
      SecretString:
        Fn::Sub: "{\n  \"perplexity_secret_key\": \"${PerplexitySecretKey}\",\n}"
      Tags:
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  WebhookDeadLetterQueue:
    Type: AWS::SQS::Queue
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W48
          reason: Ignoring KMS key, uses SSE-SQS
      SamResourceId: WebhookDeadLetterQueue
    Properties:
      ContentBasedDeduplication: true
      DeduplicationScope: messageGroup
      DelaySeconds: 0
      FifoQueue: true
      FifoThroughputLimit: perMessageGroupId
      MessageRetentionPeriod: 1209600
      ReceiveMessageWaitTimeSeconds: 20
      SqsManagedSseEnabled: true
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: WebhookDeadLetterQueue
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  WebhookQueue:
    Type: AWS::SQS::Queue
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W48
          reason: Ignoring KMS key, uses SSE-SQS
      SamResourceId: WebhookQueue
    Properties:
      ContentBasedDeduplication: true
      DeduplicationScope: messageGroup
      DelaySeconds: 0
      FifoQueue: true
      FifoThroughputLimit: perMessageGroupId
      MessageRetentionPeriod: 1209600
      ReceiveMessageWaitTimeSeconds: 20
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - WebhookDeadLetterQueue
          - Arn
        maxReceiveCount: 5
      SqsManagedSseEnabled: true
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: WebhookQueue
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
      VisibilityTimeout: 180
  WebhookQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
        - Sid: Deny non-HTTPS access
          Effect: Deny
          Principal: '*'
          Action: sqs:*
          Resource:
            Fn::GetAtt:
            - WebhookQueue
            - Arn
          Condition:
            Bool:
              aws:SecureTransport: false
        - Effect: Allow
          Principal:
            AWS:
              Fn::GetAtt:
              - ApiFunctionRole
              - Arn
          Action: sqs:SendMessage
          Resource:
            Fn::GetAtt:
            - WebhookQueue
            - Arn
        - Effect: Allow
          Principal:
            AWS:
              Fn::GetAtt:
              - WebhookProcessorFunctionRole
              - Arn
          Action:
          - sqs:DeleteMessage
          - sqs:ReceiveMessage
          - sqs:GetQueueAttributes
          Resource:
            Fn::GetAtt:
            - WebhookQueue
            - Arn
      Queues:
      - Ref: WebhookQueue
    Metadata:
      SamResourceId: WebhookQueuePolicy
  WriteDeadLetterQueue:
    Type: AWS::SQS::Queue
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W48
          reason: Ignoring KMS key, uses SSE-SQS
      SamResourceId: WriteDeadLetterQueue
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 1209600
      ReceiveMessageWaitTimeSeconds: 20
      SqsManagedSseEnabled: true
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: WriteDeadLetterQueue
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  WriteQueue:
    Type: AWS::SQS::Queue
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W48
          reason: Ignoring KMS key, uses SSE-SQS
      SamResourceId: WriteQueue
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 1209600
      ReceiveMessageWaitTimeSeconds: 20
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - WriteDeadLetterQueue
          - Arn
        maxReceiveCount: 5
      SqsManagedSseEnabled: true
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: WriteQueue
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
      VisibilityTimeout: 180
  WriteQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
        - Sid: Deny non-HTTPS access
          Effect: Deny
          Principal: '*'
          Action: sqs:*
          Resource:
            Fn::GetAtt:
            - WriteQueue
            - Arn
          Condition:
            Bool:
              aws:SecureTransport: false
        - Effect: Allow
          Principal:
            AWS:
              Fn::GetAtt:
              - WebhookProcessorFunctionRole
              - Arn
          Action: sqs:SendMessage
          Resource:
            Fn::GetAtt:
            - WriteQueue
            - Arn
        - Effect: Allow
          Principal:
            AWS:
              Fn::GetAtt:
              - BatchWriterFunctionRole
              - Arn
          Action:
          - sqs:DeleteMessage
          - sqs:ReceiveMessage
          - sqs:GetQueueAttributes
          Resource:
            Fn::GetAtt:
            - WriteQueue
            - Arn
      Queues:
      - Ref: WriteQueue
    Metadata:
      SamResourceId: WriteQueuePolicy
  DependencyLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildArchitecture: x86_64
      BuildMethod: python3.12
      SamResourceId: DependencyLayer
    Properties:
      LicenseInfo: MIT-0
      CompatibleArchitectures:
      - x86_64
      CompatibleRuntimes:
      - python3.12
      ContentUri: s3://sam-s3-bucket-for-lambda2/5b23201ee55b549c5beed919d0c54bd0
      Description:
        Fn::Sub: Plaid API - ${Environment} - Dependency Layer
      RetentionPolicy: Delete
  EncryptionKey:
    Type: AWS::KMS::Key
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Description:
        Fn::Sub: Plaid API - ${Environment}
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS:
              Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: '*'
        - Sid: Allow use of the key by API
          Effect: Allow
          Principal:
            AWS:
              Fn::GetAtt:
              - ApiFunctionRole
              - Arn
          Action:
          - kms:DescribeKey
          - kms:Encrypt
          - kms:GenerateDataKey*
          - kms:ReEncrypt*
          Resource: '*'
        - Sid: Allow use of the key by processor
          Effect: Allow
          Principal:
            AWS:
              Fn::GetAtt:
              - WebhookProcessorFunctionRole
              - Arn
          Action:
          - kms:Decrypt
          - kms:DescribeKey
          Resource: '*'
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: true
      PendingWindowInDays: 7
      Tags:
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
    Metadata:
      SamResourceId: EncryptionKey
  Table:
    Type: AWS::DynamoDB::GlobalTable
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
      - AttributeName: gsi1pk
        AttributeType: S
      - AttributeName: gsi1sk
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
      - IndexName: GSI1
        KeySchema:
        - AttributeName: gsi1pk
          KeyType: HASH
        - AttributeName: gsi1sk
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      Replicas:
      - PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        Region:
          Ref: AWS::Region
        TableClass: STANDARD
        Tags:
        - Key: GITHUB_ORG
          Value:
            Ref: GitHubOrg
        - Key: GITHUB_REPO
          Value:
            Ref: GitHubRepo
        - Key: Environment
          Value:
            Ref: Environment
      SSESpecification:
        SSEEnabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TimeToLiveSpecification:
        AttributeName: expire_at
        Enabled: true
    Metadata:
      SamResourceId: Table
  HttpApiRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              Fn::Sub: apigateway.${AWS::URLSuffix}
          Action: sts:AssumeRole
      Description:
        Fn::Sub: DO NOT DELETE - Used by API Gateway. Created by ${AWS::StackId}
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
      Policies:
      - PolicyName: AllowLambdaInvoke
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource:
              Fn::GetAtt:
              - ApiFunction
              - Arn
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: HttpApiRole
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
    Metadata:
      SamResourceId: HttpApiRole
  AppSyncRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              Fn::Sub: appsync.${AWS::URLSuffix}
          Action: sts:AssumeRole
      Description:
        Fn::Sub: DO NOT DELETE - Used by AppSync. Created by ${AWS::StackId}
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs
      Policies:
      - PolicyName: AppSyncPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:Query
            - dynamodb:PutItem
            Resource:
            - Fn::GetAtt:
              - Table
              - Arn
            - Fn::Sub: ${Table.Arn}/index/*
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: AppSyncRole
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
    Metadata:
      SamResourceId: AppSyncRole
  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowCredentials: true
        AllowHeaders:
        - Content-Type
        - Accept
        - Authorization
        AllowMethods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        AllowOrigins:
        - http://localhost:3000
        - https://*
        MaxAge: 300
      Description:
        Fn::Sub: 'Plaid API - ${Environment} (Plaid Env: ${PlaidEnvironment})'
      Name:
        Fn::Sub: Plaid API - ${Environment}
      ProtocolType: HTTP
      Tags:
        GITHUB_ORG:
          Ref: GitHubOrg
        GITHUB_REPO:
          Ref: GitHubRepo
        Environment:
          Ref: Environment
    Metadata:
      SamResourceId: HttpApi
  GraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      AdditionalAuthenticationProviders:
      - AuthenticationType: AWS_IAM
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      LogConfig:
        CloudWatchLogsRoleArn:
          Fn::GetAtt:
          - AppSyncRole
          - Arn
        ExcludeVerboseContent: true
        FieldLogLevel: ERROR
      Name:
        Fn::Sub: Plaid GraphQL API - ${Environment}
      Tags:
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
      UserPoolConfig:
        AppIdClientRegex:
          Ref: UserPoolClient
        AwsRegion:
          Ref: AWS::Region
        DefaultAction: ALLOW
        UserPoolId:
          Ref: CognitoUserPool
      XrayEnabled: true
    Metadata:
      SamResourceId: GraphQLApi
  DynamoDBDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DynamoDBConfig:
        AwsRegion:
          Ref: AWS::Region
        TableName:
          Ref: Table
      Name: DynamoDB
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncRole
        - Arn
      Type: AMAZON_DYNAMODB
    Metadata:
      SamResourceId: DynamoDBDataSource
  GetFinancialRecommendationsDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: GetFinancialRecommendationDataSource
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - GetFinancialRecommendationsLambda
          - Arn
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncLambdaInvokeRole
        - Arn
    Metadata:
      SamResourceId: GetFinancialRecommendationsDataSource
  GetFinancialConversationResponseDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: GetFinancialConversationResponseDataSource
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - GetFinancialConversationResponseLambda
          - Arn
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncLambdaInvokeRole
        - Arn
    Metadata:
      SamResourceId: GetFinancialConversationResponseDataSource
  NoneDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Name: NoneDataSource
      Type: NONE
    Metadata:
      SamResourceId: NoneDataSource
  AppSyncLambdaInvokeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: AppSyncLambdaInvokePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource: '*'
    Metadata:
      SamResourceId: AppSyncLambdaInvokeRole
  GraphQLSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      DefinitionS3Location: s3://sam-s3-bucket-for-lambda2/bee4f019bf7d73b2b8dc3da179dd06e3
    Metadata:
      SamResourceId: GraphQLSchema
  GetItemsResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Code: "export function request(ctx) {\n  return {};\n}\n\nexport function response(ctx)\
        \ {\n  return ctx.prev.result;\n}"
      FieldName: getItems
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - GetItemsFunctionConfiguration
          - FunctionId
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      TypeName: Query
    Metadata:
      SamResourceId: GetItemsResolver
  GetSpendingSummaryResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Code: "export function request(ctx) {\n  return {};\n}\n\nexport function response(ctx)\
        \ {\n  return ctx.prev.result;\n}"
      FieldName: getSpendingSummary
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - GetSpendingSummaryFunctionConfiguration
          - FunctionId
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      TypeName: Query
    Metadata:
      SamResourceId: GetSpendingSummaryResolver
  GetNetWorthSummaryResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Code: "export function request(ctx) {\n  return {};\n}\n\nexport function response(ctx)\
        \ {\n  return ctx.prev.result;\n}"
      FieldName: getNetWorths
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - GetNetWorthFunctionConfiguration2
          - FunctionId
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      TypeName: Query
    Metadata:
      SamResourceId: GetNetWorthSummaryResolver
  GetSpendingSummaryFunctionConfiguration:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      CodeS3Location: s3://sam-s3-bucket-for-lambda2/20f7829fe3a634f5781000651221c108
      DataSourceName:
        Fn::GetAtt:
        - DynamoDBDataSource
        - Name
      Name: GET_SPENDING_SUMMARY
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
    Metadata:
      SamResourceId: GetSpendingSummaryFunctionConfiguration
  GetNetWorthFunctionConfiguration2:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      CodeS3Location: s3://sam-s3-bucket-for-lambda2/8db4b0541f8852764651d14810c853e6
      DataSourceName:
        Fn::GetAtt:
        - DynamoDBDataSource
        - Name
      Name: GET_NET_WORTHS2
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
    Metadata:
      SamResourceId: GetNetWorthFunctionConfiguration2
  GetItemsFunctionConfiguration:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      CodeS3Location: s3://sam-s3-bucket-for-lambda2/3da2ac87be95ad2391cc4dfd87865488
      DataSourceName:
        Fn::GetAtt:
        - DynamoDBDataSource
        - Name
      Name: GET_ITEMS
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
    Metadata:
      SamResourceId: GetItemsFunctionConfiguration
  SubscriptionAuthorizer:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Code: "export function request(ctx) {\n  return {};\n}\n\nexport function response(ctx)\
        \ {\n  return ctx.prev.result;\n}"
      FieldName: onCreateChat
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - BasicAuthFunctionConfiguration
          - FunctionId
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      TypeName: Subscription
    Metadata:
      SamResourceId: SubscriptionAuthorizer
  CreateChatResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Code: "export function request(ctx) {\n  return {};\n}\n\nexport function response(ctx)\
        \ {\n  return ctx.prev.result;\n}"
      FieldName: createChat
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - CreateChatFunctionConfiguration
          - FunctionId
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      TypeName: Mutation
    Metadata:
      SamResourceId: CreateChatResolver
  CreateChatFunctionConfiguration:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      CodeS3Location: s3://sam-s3-bucket-for-lambda2/b58eb1d3e860a522eb32edb782073afa
      DataSourceName:
        Fn::GetAtt:
        - DynamoDBDataSource
        - Name
      Name: CREATE_CHAT
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
    Metadata:
      SamResourceId: CreateChatFunctionConfiguration
  BasicAuthFunctionConfiguration:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      CodeS3Location: s3://sam-s3-bucket-for-lambda2/03f1bb90d2cba1be4cb9247f7baa1dd9
      DataSourceName:
        Fn::GetAtt:
        - NoneDataSource
        - Name
      Name: BASIC_AUTH
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
    Metadata:
      SamResourceId: BasicAuthFunctionConfiguration
  GetFinancialRecommendationResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Code: "export function request(ctx) {\n  return {};\n}\n\nexport function response(ctx)\
        \ {\n  return ctx.prev.result;\n}"
      FieldName: getFinancialRecommendations
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - GetFinancialRecommendationsFunctionConfiguration
          - FunctionId
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      TypeName: Query
    Metadata:
      SamResourceId: GetFinancialRecommendationResolver
  GetFinancialRecommendationsFunctionConfiguration:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      CodeS3Location: s3://sam-s3-bucket-for-lambda2/003d0f5ed0c24253d976e184fcc28bfa
      DataSourceName:
        Fn::GetAtt:
        - GetFinancialRecommendationsDataSource
        - Name
      Name: GET_FINANCIAL_RECOMMENDATIONS
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
    Metadata:
      SamResourceId: GetFinancialRecommendationsFunctionConfiguration
  GetFinancialCoversationResponseResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Code: "export function request(ctx) {\n  return {};\n}\n\nexport function response(ctx)\
        \ {\n  return ctx.prev.result;\n}"
      FieldName: getFinancialConversationResponse
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - GetFinancialCoversationResponseFunctionConfiguration
          - FunctionId
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      TypeName: Query
    Metadata:
      SamResourceId: GetFinancialCoversationResponseResolver
  GetFinancialCoversationResponseFunctionConfiguration:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      CodeS3Location: s3://sam-s3-bucket-for-lambda2/9cba37f8d624f4796ec88aa2e0ff3c9e
      DataSourceName:
        Fn::GetAtt:
        - GetFinancialConversationResponseDataSource
        - Name
      Name: GET_FINANCIAL_CONVERSATION_RESPONSE
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
    Metadata:
      SamResourceId: GetFinancialCoversationResponseFunctionConfiguration
  GetAccountsResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Code: "export function request(ctx) {\n  return {};\n}\n\nexport function response(ctx)\
        \ {\n  return ctx.prev.result;\n}"
      FieldName: getAccounts
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - GetAccountsFunctionConfiguration
          - FunctionId
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      TypeName: Query
    Metadata:
      SamResourceId: GetAccountsResolver
  GetAccountsFunctionConfiguration:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      CodeS3Location: s3://sam-s3-bucket-for-lambda2/ef605ddc9f3905a9f30ba065f31cad2a
      DataSourceName:
        Fn::GetAtt:
        - DynamoDBDataSource
        - Name
      Name: GET_ACCOUNTS
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
    Metadata:
      SamResourceId: GetAccountsFunctionConfiguration
  GetTransactionsResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Code: "export function request(ctx) {\n  return {};\n}\n\nexport function response(ctx)\
        \ {\n  return ctx.prev.result;\n}"
      FieldName: getTransactions
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - GetTransactionsFunctionConfiguration
          - FunctionId
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      TypeName: Query
    Metadata:
      SamResourceId: GetTransactionsResolver
  GetTransactionsFunctionConfiguration:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      CodeS3Location: s3://sam-s3-bucket-for-lambda2/8ac3332fd877599145d70148d306a61f
      DataSourceName:
        Fn::GetAtt:
        - DynamoDBDataSource
        - Name
      Name: GET_TRANSACTIONS
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
    Metadata:
      SamResourceId: GetTransactionsFunctionConfiguration
  GetInvestmentsResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      Code: "export function request(ctx) {\n  return {};\n}\n\nexport function response(ctx)\
        \ {\n  return ctx.prev.result;\n}"
      FieldName: getInvestments
      Kind: PIPELINE
      PipelineConfig:
        Functions:
        - Fn::GetAtt:
          - GetInvestmentsFunctionConfiguration
          - FunctionId
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      TypeName: Query
    Metadata:
      SamResourceId: GetInvestmentsResolver
  GetInvestmentsFunctionConfiguration:
    Type: AWS::AppSync::FunctionConfiguration
    Properties:
      ApiId:
        Fn::GetAtt:
        - GraphQLApi
        - ApiId
      CodeS3Location: s3://sam-s3-bucket-for-lambda2/1fca4aae0cf852d5abccec222ec46eae
      DataSourceName:
        Fn::GetAtt:
        - DynamoDBDataSource
        - Name
      Name: GET_INVESTMENTS
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
    Metadata:
      SamResourceId: GetInvestmentsFunctionConfiguration
  HttpApiAuthorizer:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId:
        Ref: HttpApi
      AuthorizerType: JWT
      JwtConfiguration:
        Audience:
        - Ref: UserPoolClient
        Issuer:
          Fn::Sub: https://cognito-idp.${AWS::Region}.${AWS::URLSuffix}/${CognitoUserPool}
      IdentitySource:
      - $request.header.Authorization
      Name: JwtAuthorizer
    Metadata:
      SamResourceId: HttpApiAuthorizer
  HttpApiIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HttpApi
      ConnectionType: INTERNET
      CredentialsArn:
        Fn::GetAtt:
        - HttpApiRole
        - Arn
      IntegrationMethod: POST
      IntegrationUri:
        Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiFunction.Arn}/invocations
      IntegrationType: AWS_PROXY
      PayloadFormatVersion: '2.0'
      TimeoutInMillis: 10000
    Metadata:
      SamResourceId: HttpApiIntegration
  HttpApiLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - ApiFunction
        - Arn
      Principal:
        Fn::Sub: apigateway.${AWS::URLSuffix}
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::Sub: arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/*/*/*
    Metadata:
      SamResourceId: HttpApiLambdaPermission
  WebhookRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpApi
      AuthorizationType: NONE
      RouteKey: POST /v1/webhook
      Target:
        Fn::Sub: integrations/${HttpApiIntegration}
    Metadata:
      SamResourceId: WebhookRoute
  DefaultCorsRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpApi
      AuthorizationType: NONE
      RouteKey: OPTIONS /{proxy+}
      Target:
        Fn::Sub: integrations/${HttpApiIntegration}
    Metadata:
      SamResourceId: DefaultCorsRoute
  ReadOnlyRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpApi
      AuthorizationType: JWT
      AuthorizerId:
        Ref: HttpApiAuthorizer
      RouteKey: GET /{proxy+}
      Target:
        Fn::Sub: integrations/${HttpApiIntegration}
    Metadata:
      SamResourceId: ReadOnlyRoute
  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HttpApi
      AuthorizationType: JWT
      AuthorizerId:
        Ref: HttpApiAuthorizer
      RouteKey: $default
      Target:
        Fn::Sub: integrations/${HttpApiIntegration}
    Metadata:
      SamResourceId: DefaultRoute
  HttpApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
          - AccessLogGroup
          - Arn
        Format: '{"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","routeKey":"$context.routeKey","status":$context.status,"responseLatency":$context.responseLatency,"integrationRequestId":"$context.integration.requestId","functionResponseStatus":"$context.integration.status","integrationLatency":"$context.integration.latency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent","principalId":"$context.authorizer.principalId"}'
      ApiId:
        Ref: HttpApi
      AutoDeploy: true
      StageName: $default
    Metadata:
      SamResourceId: HttpApiStage
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
      - email
      MfaConfiguration: 'OFF'
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 3
      UserAttributeUpdateSettings:
        AttributesRequireVerificationBeforeUpdate:
        - email
      UsernameAttributes:
      - email
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolAddOns:
        AdvancedSecurityMode: ENFORCED
      UserPoolTags:
        GITHUB_ORG:
          Ref: GitHubOrg
        GITHUB_REPO:
          Ref: GitHubRepo
        Environment:
          Ref: Environment
    Metadata:
      SamResourceId: CognitoUserPool
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain:
        Fn::Select:
        - 2
        - Fn::Split:
          - /
          - Ref: AWS::StackId
      UserPoolId:
        Ref: CognitoUserPool
    Metadata:
      SamResourceId: UserPoolDomain
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AccessTokenValidity: 1
      AllowedOAuthFlows:
      - code
      - implicit
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
      - email
      - openid
      - Fn::Sub: ${UserPoolResourceServer}/plaid.rw
      - Fn::Sub: ${UserPoolResourceServer}/plaid.ro
      CallbackURLs:
      - http://localhost:3000
      EnableTokenRevocation: true
      ExplicitAuthFlows:
      - ALLOW_USER_PASSWORD_AUTH
      - ALLOW_USER_SRP_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      IdTokenValidity: 1
      PreventUserExistenceErrors: ENABLED
      ReadAttributes:
      - email
      - email_verified
      RefreshTokenValidity: 30
      TokenValidityUnits:
        AccessToken: hours
        IdToken: hours
        RefreshToken: days
      SupportedIdentityProviders:
      - COGNITO
      UserPoolId:
        Ref: CognitoUserPool
      WriteAttributes:
      - email
    Metadata:
      SamResourceId: UserPoolClient
  UserPoolResourceServer:
    Type: AWS::Cognito::UserPoolResourceServer
    Properties:
      Identifier:
        Fn::GetAtt:
        - HttpApi
        - ApiEndpoint
      Name:
        Ref: AWS::StackName
      Scopes:
      - ScopeDescription: Read-only access
        ScopeName: plaid.ro
      - ScopeDescription: Read/write access
        ScopeName: plaid.rw
      UserPoolId:
        Ref: CognitoUserPool
    Metadata:
      SamResourceId: UserPoolResourceServer
  ApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    DependsOn: HttpApi
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
        - HttpApiRole
        - Arn
    Metadata:
      SamResourceId: ApiGatewayAccount
  AccessLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W84
          reason: Ignoring KMS key
      SamResourceId: AccessLogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/apigateway/${HttpApi}/access-logs
      RetentionInDays: 3
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: AccessLogGroup
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  ApiFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W84
          reason: Ignoring KMS key
      SamResourceId: ApiFunctionLogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${ApiFunction}
      RetentionInDays: 3
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: ApiFunctionLogGroup
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  ApiFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service:
              Fn::Sub: lambda.${AWS::URLSuffix}
          Action: sts:AssumeRole
      Description:
        Fn::Sub: DO NOT DELETE - Used by Lambda. Created by CloudFormation ${AWS::StackId}
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: ApiFunctionRole
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
    Metadata:
      SamResourceId: ApiFunctionRole
  ApiFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ApiPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: appsync:GraphQL
          Resource: '*'
        - Effect: Allow
          Action: secretsmanager:GetSecretValue
          Resource:
            Ref: PlaidCredential
        - Effect: Allow
          Action: sqs:SendMessage
          Resource:
            Fn::GetAtt:
            - WebhookQueue
            - Arn
        - Effect: Allow
          Action:
          - dynamodb:BatchWriteItem
          - dynamodb:DeleteItem
          - dynamodb:DescribeTable
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:Query
          Resource:
            Fn::GetAtt:
            - Table
            - Arn
        - Effect: Allow
          Action:
          - dynamodb:BatchWriteItem
          - dynamodb:DeleteItem
          - dynamodb:DescribeTable
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:Query
          Resource:
            Fn::Sub: ${Table.Arn}/index/*
        - Effect: Allow
          Action:
          - kms:DescribeKey
          - kms:Encrypt
          - kms:GenerateDataKey*
          - kms:ReEncrypt*
          Resource:
            Fn::GetAtt:
            - EncryptionKey
            - Arn
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: '*'
        - Effect: Allow
          Action:
          - kms:Decrypt
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - EncryptionKey
            - Arn
      Roles:
      - Ref: ApiFunctionRole
    Metadata:
      SamResourceId: ApiFunctionPolicy
  ApiFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: ApiFunction
      cfn_nag:
        rules_to_suppress:
        - id: W58
          reason: Ignoring CloudWatch
        - id: W89
          reason: Ignoring VPC
        - id: W92
          reason: Ignoring Reserved Concurrency
    Properties:
      CodeUri: s3://sam-s3-bucket-for-lambda2/d46479f02874ed4f83b667ff35e0a15e
      Description:
        Fn::Sub: Plaid (${Environment}) - API
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: api
          PLAID_SECRET_ARN:
            Ref: PlaidCredential
          WEBHOOK_QUEUE_URL:
            Ref: WebhookQueue
          WEBHOOK_URL:
            Fn::Sub: ${HttpApi.ApiEndpoint}/v1/webhook
          KEY_ARN:
            Fn::GetAtt:
            - EncryptionKey
            - Arn
      MemorySize: 256
      Role:
        Fn::GetAtt:
        - ApiFunctionRole
        - Arn
  GetFinancialConversationResponseLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W84
          reason: Ignoring KMS key
      SamResourceId: GetFinancialConversationResponseLogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${GetFinancialConversationResponseLambda}
      RetentionInDays: 3
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: GetFinancialConversationResponseLogGroup
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  CalculateIncomeAndSpendingLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W84
          reason: Ignoring KMS key
      SamResourceId: CalculateIncomeAndSpendingLogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${CalculateIncomeAndSpendingLambda}
      RetentionInDays: 3
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: CalculateIncomeAndSpendingLogGroup
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  SnapShotNetWorthLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W84
          reason: Ignoring KMS key
      SamResourceId: SnapShotNetWorthLogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${SnapShotNetWorthLambda}
      RetentionInDays: 3
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: SnapShotNetWorthLogGroup
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  UpdatorLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W84
          reason: Ignoring KMS key
      SamResourceId: UpdatorLogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${UpdatorLambda}
      RetentionInDays: 3
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: UpdatorLogGroup
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  GetFinancialRecommendationsLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W84
          reason: Ignoring KMS key
      SamResourceId: GetFinancialRecommendationsLogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${GetFinancialRecommendationsLambda}
      RetentionInDays: 3
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: GetFinancialRecommendationsLogGroup
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  GetFinancialRecommendationsLambda:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W58
          reason: Ignoring CloudWatch
        - id: W89
          reason: Ignoring VPC
        - id: W92
          reason: Ignoring Reserved Concurrency
      SamResourceId: GetFinancialRecommendationsLambda
    Properties:
      CodeUri: s3://sam-s3-bucket-for-lambda2/8f02e4ddce5a65372820fd9aae834368
      Handler: buildLambda/getFinancialRecommendations.getFinancialRecommendations
      Description:
        Fn::Sub: Get Financial Recommendation Lambda
      Environment:
        Variables:
          GptSecretKey:
            Ref: GptSecretKey
          PerplexitySecretKey:
            Ref: PerplexitySecretKey
          KEY_ARN:
            Fn::GetAtt:
            - EncryptionKey
            - Arn
          TABLE_NAME:
            Ref: Table
          APPSYNC_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
      MemorySize: 256
      Role:
        Fn::GetAtt:
        - ApiFunctionRole
        - Arn
      Runtime: nodejs18.x
      Timeout: 61
  GetFinancialConversationResponseLambda:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W58
          reason: Ignoring CloudWatch
        - id: W89
          reason: Ignoring VPC
        - id: W92
          reason: Ignoring Reserved Concurrency
      SamResourceId: GetFinancialConversationResponseLambda
    Properties:
      CodeUri: s3://sam-s3-bucket-for-lambda2/8f02e4ddce5a65372820fd9aae834368
      Handler: buildLambda/getResponseUsingFinancialContext.getResponseUsingFinancialContext
      Description:
        Fn::Sub: Get Financial response for Lambda
      Environment:
        Variables:
          GptSecretKey:
            Ref: GptSecretKey
          PerplexitySecretKey:
            Ref: PerplexitySecretKey
          KEY_ARN:
            Fn::GetAtt:
            - EncryptionKey
            - Arn
          TABLE_NAME:
            Ref: Table
          APPSYNC_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
      MemorySize: 256
      Role:
        Fn::GetAtt:
        - ApiFunctionRole
        - Arn
      Runtime: nodejs18.x
      Timeout: 61
  CalculateIncomeAndSpendingSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(15 minutes)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - CalculateIncomeAndSpendingLambda
          - Arn
        Id: CalculateIncomeAndSpendingFunctionTarget
    Metadata:
      SamResourceId: CalculateIncomeAndSpendingSchedule
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: CalculateIncomeAndSpendingLambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - CalculateIncomeAndSpendingSchedule
        - Arn
    Metadata:
      SamResourceId: PermissionForEventsToInvokeLambda
  SnapShotNetWorthSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 day)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - SnapShotNetWorthLambda
          - Arn
        Id: SnapShotNetWorthTarget
    Metadata:
      SamResourceId: SnapShotNetWorthSchedule
  UpdatorSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(12 hours)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - UpdatorLambda
          - Arn
        Id: UpdatorTarget
    Metadata:
      SamResourceId: UpdatorSchedule
  PermissionForEventsToInvokeSnapshotLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: SnapShotNetWorthLambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - SnapShotNetWorthSchedule
        - Arn
    Metadata:
      SamResourceId: PermissionForEventsToInvokeSnapshotLambda
  PermissionForEventsToInvokeUpdatorLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: UpdatorLambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - UpdatorSchedule
        - Arn
    Metadata:
      SamResourceId: PermissionForEventsToInvokeUpdatorLambda
  UpdatorLambda:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W58
          reason: Ignoring CloudWatch
        - id: W89
          reason: Ignoring VPC
        - id: W92
          reason: Ignoring Reserved Concurrency
      SamResourceId: UpdatorLambda
    Properties:
      CodeUri: s3://sam-s3-bucket-for-lambda2/8f02e4ddce5a65372820fd9aae834368
      Handler: buildLambda/updator.updator
      Description:
        Fn::Sub: Triggers updates of users
      Environment:
        Variables:
          GptSecretKey:
            Ref: GptSecretKey
          PerplexitySecretKey:
            Ref: PerplexitySecretKey
          KEY_ARN:
            Fn::GetAtt:
            - EncryptionKey
            - Arn
          TABLE_NAME:
            Ref: Table
          APPSYNC_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
          WEBHOOK_URL:
            Fn::Sub: ${HttpApi.ApiEndpoint}/v1/webhook
          X: '323'
      MemorySize: 2048
      Role:
        Fn::GetAtt:
        - ApiFunctionRole
        - Arn
      Runtime: nodejs18.x
      Timeout: 900
  SnapShotNetWorthLambda:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W58
          reason: Ignoring CloudWatch
        - id: W89
          reason: Ignoring VPC
        - id: W92
          reason: Ignoring Reserved Concurrency
      SamResourceId: SnapShotNetWorthLambda
    Properties:
      CodeUri: s3://sam-s3-bucket-for-lambda2/8f02e4ddce5a65372820fd9aae834368
      Handler: buildLambda/snapShotNetWorth.snapShotNetWorth
      Description:
        Fn::Sub: Snapshots the networth of users
      Environment:
        Variables:
          GptSecretKey:
            Ref: GptSecretKey
          PerplexitySecretKey:
            Ref: PerplexitySecretKey
          KEY_ARN:
            Fn::GetAtt:
            - EncryptionKey
            - Arn
          TABLE_NAME:
            Ref: Table
          APPSYNC_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
      MemorySize: 2048
      Role:
        Fn::GetAtt:
        - ApiFunctionRole
        - Arn
      Runtime: nodejs18.x
      Timeout: 900
  CalculateIncomeAndSpendingLambda:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W58
          reason: Ignoring CloudWatch
        - id: W89
          reason: Ignoring VPC
        - id: W92
          reason: Ignoring Reserved Concurrency
      SamResourceId: CalculateIncomeAndSpendingLambda
    Properties:
      CodeUri: s3://sam-s3-bucket-for-lambda2/8f02e4ddce5a65372820fd9aae834368
      Handler: buildLambda/calculateIncomeAndSpending.calculateIncomeAndSpending
      Description:
        Fn::Sub: Calculate the income and spending for users
      Environment:
        Variables:
          GptSecretKey:
            Ref: GptSecretKey
          PerplexitySecretKey:
            Ref: PerplexitySecretKey
          KEY_ARN:
            Fn::GetAtt:
            - EncryptionKey
            - Arn
          TABLE_NAME:
            Ref: Table
          APPSYNC_URL:
            Fn::GetAtt:
            - GraphQLApi
            - GraphQLUrl
      MemorySize: 2048
      Role:
        Fn::GetAtt:
        - ApiFunctionRole
        - Arn
      Runtime: nodejs18.x
      Timeout: 900
  WebhookProcessorFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W84
          reason: Ignoring KMS key
      SamResourceId: WebhookProcessorFunctionLogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${WebhookProcessorFunction}
      RetentionInDays: 3
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: WebhookProcessorFunctionLogGroup
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  WebhookProcessorFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service:
              Fn::Sub: lambda.${AWS::URLSuffix}
          Action: sts:AssumeRole
      Description:
        Fn::Sub: DO NOT DELETE - Used by Lambda. Created by CloudFormation ${AWS::StackId}
      Policies:
      - PolicyName: WebhookProcessorPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:DescribeStream
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:ListStreams
            Resource:
              Fn::GetAtt:
              - Table
              - StreamArn
          - Effect: Allow
            Action:
            - dynamodb:DescribeTable
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:UpdateItem
            Resource:
              Fn::GetAtt:
              - Table
              - Arn
          - Effect: Allow
            Action: sqs:SendMessage
            Resource:
              Fn::GetAtt:
              - WriteQueue
              - Arn
          - Effect: Allow
            Action:
            - sqs:DeleteMessage
            - sqs:ReceiveMessage
            - sqs:GetQueueAttributes
            Resource:
              Fn::GetAtt:
              - WebhookQueue
              - Arn
          - Effect: Allow
            Action: secretsmanager:GetSecretValue
            Resource:
              Ref: PlaidCredential
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: WebhookProcessorFunctionRole
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
    Metadata:
      SamResourceId: WebhookProcessorFunctionRole
  WebhookProcessorFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: Additional
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - kms:Decrypt
          - kms:DescribeKey
          Resource:
            Fn::GetAtt:
            - EncryptionKey
            - Arn
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
            Fn::GetAtt:
            - WebhookProcessorFunctionLogGroup
            - Arn
      Roles:
      - Ref: WebhookProcessorFunctionRole
    Metadata:
      SamResourceId: WebhookProcessorFunctionPolicy
  WebhookProcessorFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: WebhookProcessorFunction
      cfn_nag:
        rules_to_suppress:
        - id: W58
          reason: Ignoring CloudWatch
        - id: W89
          reason: Ignoring VPC
        - id: W92
          reason: Ignoring Reserved Concurrency
    Properties:
      CodeUri: s3://sam-s3-bucket-for-lambda2/e73b9b52af9f5ae7a57bec5156315fd8
      Description:
        Fn::Sub: Plaid (${Environment}) - WebhookProcessor
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: webhook_processor
          QUEUE_URL:
            Ref: WriteQueue
          PLAID_SECRET_ARN:
            Ref: PlaidCredential
          KEY_ARN:
            Fn::GetAtt:
            - EncryptionKey
            - Arn
      Events:
        DynamoDBEvent:
          Type: DynamoDB
          Properties:
            BatchSize: 1
            BisectBatchOnFunctionError: true
            Enabled: true
            FilterCriteria:
              Filters:
              - Pattern: '{"eventName": ["INSERT"], "dynamodb": {"NewImage": {"pk":
                  {"S": ["ITEMS"]}}}}'
            FunctionResponseTypes:
            - ReportBatchItemFailures
            StartingPosition: LATEST
            Stream:
              Fn::GetAtt:
              - Table
              - StreamArn
        SQSEvent:
          Type: SQS
          Properties:
            BatchSize: 1
            Enabled: true
            FunctionResponseTypes:
            - ReportBatchItemFailures
            Queue:
              Fn::GetAtt:
              - WebhookQueue
              - Arn
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - WebhookProcessorFunctionRole
        - Arn
      Timeout: 30
  BatchWriterFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
        - id: W84
          reason: Ignoring KMS key
      SamResourceId: BatchWriterFunctionLogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${BatchWriterFunction}
      RetentionInDays: 3
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: BatchWriterFunctionLogGroup
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
  BatchWriterFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service:
              Fn::Sub: lambda.${AWS::URLSuffix}
          Action: sts:AssumeRole
      Description:
        Fn::Sub: DO NOT DELETE - Used by Lambda. Created by CloudFormation ${AWS::StackId}
      Policies:
      - PolicyName: BatchWriterPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - sqs:DeleteMessage
            - sqs:ReceiveMessage
            - sqs:GetQueueAttributes
            Resource:
              Fn::GetAtt:
              - WriteQueue
              - Arn
          - Effect: Allow
            Action: dynamodb:BatchWriteItem
            Resource:
              Fn::GetAtt:
              - Table
              - Arn
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: BatchWriterFunctionRole
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
    Metadata:
      SamResourceId: BatchWriterFunctionRole
  BatchWriterFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CloudWatchLogs
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
            Fn::GetAtt:
            - BatchWriterFunctionLogGroup
            - Arn
      Roles:
      - Ref: BatchWriterFunctionRole
    Metadata:
      SamResourceId: BatchWriterFunctionPolicy
  BatchWriterFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SamResourceId: BatchWriterFunction
      cfn_nag:
        rules_to_suppress:
        - id: W58
          reason: Ignoring CloudWatch
        - id: W89
          reason: Ignoring VPC
        - id: W92
          reason: Ignoring Reserved Concurrency
    Properties:
      CodeUri: s3://sam-s3-bucket-for-lambda2/e92a09e0181e61b480bb59a0e91fb786
      Description:
        Fn::Sub: Plaid (${Environment}) - BatchWriter
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: batch_writer
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            BatchSize: 100
            Enabled: true
            FunctionResponseTypes:
            - ReportBatchItemFailures
            MaximumBatchingWindowInSeconds: 60
            Queue:
              Fn::GetAtt:
              - WriteQueue
              - Arn
            ScalingConfig:
              MaximumConcurrency: 5
      Role:
        Fn::GetAtt:
        - BatchWriterFunctionRole
        - Arn
      Timeout: 30
  AmplifyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service:
              Fn::Sub: amplify.${AWS::URLSuffix}
          Action: sts:AssumeRole
          Condition:
            ArnLike:
              aws:SourceArn:
                Fn::Sub: arn:${AWS::Partition}:amplify:${AWS::Region}:${AWS::AccountId}:apps/*
            StringEquals:
              aws:SourceAccount:
                Ref: AWS::AccountId
      Description:
        Fn::Sub: DO NOT DELETE - Used by Amplify. Created by CloudFormation ${AWS::StackId}
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess-Amplify
      Tags:
      - Key: aws-cloudformation:stack-name
        Value:
          Ref: AWS::StackName
      - Key: aws-cloudformation:stack-id
        Value:
          Ref: AWS::StackId
      - Key: aws-cloudformation:logical-id
        Value: AmplifyRole
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
    Metadata:
      SamResourceId: AmplifyRole
  FrontendApp:
    Type: AWS::Amplify::App
    Properties:
      AccessToken:
        Ref: GitHubAccessToken
      BuildSpec: "version: 1\nfrontend:\n  phases:\n    preBuild:\n      commands:\n\
        \        - cd frontend\n        - npm ci --legacy-peer-deps --no-fund --no-audit\
        \ \n    build:\n      commands:\n        - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}\n\
        \        - REACT_APP_COGNITO_CLIENT_ID=${REACT_APP_COGNITO_CLIENT_ID}\n  \
        \      - REACT_APP_COGNITO_DOMAIN=${REACT_APP_COGNITO_DOMAIN}\n        - REACT_APP_COGNTIO_USERPOOL_ID=${REACT_APP_COGNTIO_USERPOOL_ID}\n\
        \        - REACT_APP_GRAPHQL_URL=${REACT_APP_GRAPHQL_URL}\n        - REACT_APP_REGION=${REACT_APP_REGION}\n\
        \        - npm run-script build\n  artifacts:\n    baseDirectory: frontend/build\n\
        \    files:\n      - \"**/*\"\n  cache:\n    paths:\n      - \"frontend/node_modules/**/*\""
      CustomHeaders: "customHeaders:\n  - pattern: '**/*'\n    headers:\n      - key:\
        \ 'X-Frame-Options'\n        value: 'SAMEORIGIN'\n      - key: 'X-XSS-Protection'\n\
        \        value: '1; mode=block'\n      - key: 'X-Content-Type-Options'\n \
        \       value: 'nosniff'"
      CustomRules:
      - Source: </^[^.]+$|\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|woff2|ttf|map|json|webp)$)([^.]+$)/>
        Status: 200
        Target: /index.html
      Description:
        Fn::Sub: 'Plaid Demo - ${Environment} (Plaid Env: ${PlaidEnvironment})'
      EnableBranchAutoDeletion: true
      EnvironmentVariables:
      - Name: REACT_APP_BACKEND_URL
        Value:
          Fn::GetAtt:
          - HttpApi
          - ApiEndpoint
      - Name: REACT_APP_COGNITO_DOMAIN
        Value:
          Fn::Sub: ${UserPoolDomain}.auth.${AWS::Region}.amazoncognito.com
      - Name: REACT_APP_COGNTIO_USERPOOL_ID
        Value:
          Ref: CognitoUserPool
      - Name: REACT_APP_COGNITO_CLIENT_ID
        Value:
          Ref: UserPoolClient
      - Name: REACT_APP_GRAPHQL_URL
        Value:
          Fn::GetAtt:
          - GraphQLApi
          - GraphQLUrl
      - Name: REACT_APP_REGION
        Value:
          Ref: AWS::Region
      IAMServiceRole:
        Fn::GetAtt:
        - AmplifyRole
        - Arn
      Name:
        Ref: AWS::StackName
      Repository:
        Fn::Sub: https://github.com/${GitHubOrg}/${GitHubRepo}
      Tags:
      - Key: GITHUB_ORG
        Value:
          Ref: GitHubOrg
      - Key: GITHUB_REPO
        Value:
          Ref: GitHubRepo
      - Key: Environment
        Value:
          Ref: Environment
    Metadata:
      SamResourceId: FrontendApp
  Branch:
    Type: AWS::Amplify::Branch
    Properties:
      AppId:
        Fn::GetAtt:
        - FrontendApp
        - AppId
      BranchName:
        Ref: BranchName
      EnableAutoBuild: true
      EnablePullRequestPreview: false
      PullRequestEnvironmentName:
        Ref: Environment
      Stage: DEVELOPMENT
    Metadata:
      SamResourceId: Branch
Outputs:
  BackendUrl:
    Description: API URL
    Value:
      Fn::GetAtt:
      - HttpApi
      - ApiEndpoint
  GraphQLUrl:
    Description: GraphQL URL
    Value:
      Fn::GetAtt:
      - GraphQLApi
      - GraphQLUrl
  FrontendUrl:
    Description: Application URL
    Value:
      Fn::Sub: https://${BranchName}.${FrontendApp.DefaultDomain}
  CognitoUserPoolId:
    Description: Cognito User Pool ID
    Value:
      Ref: CognitoUserPool
  CognitoUserPoolClientId:
    Description: Cognito User Pool Client ID
    Value:
      Ref: UserPoolClient
  CognitoEndpoint:
    Description: Cognito Endpoint URL
    Value:
      Fn::Sub: https://${UserPoolDomain}.auth.${AWS::Region}.amazoncognito.com
  ReadOnlyLogin:
    Description: Read-only Login URL
    Value:
      Fn::Sub: https://${UserPoolDomain}.auth.${AWS::Region}.amazoncognito.com/login?client_id=${UserPoolClient}&response_type=token&scope=email+openid+${UserPoolResourceServer}/plaid.ro&redirect_uri=http://localhost:3000
  ReadWriteLogin:
    Description: Read-write Login URL
    Value:
      Fn::Sub: https://${UserPoolDomain}.auth.${AWS::Region}.amazoncognito.com/login?client_id=${UserPoolClient}&response_type=token&scope=email+openid+${UserPoolResourceServer}/plaid.rw&redirect_uri=http://localhost:3000
